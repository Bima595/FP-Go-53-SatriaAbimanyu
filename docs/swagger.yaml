definitions:
  controllers.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  controllers.GameInput:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      password:
        type: string
      role_id:
        type: integer
      username:
        type: string
    required:
    - email
    - password
    - role_id
    - username
    type: object
  controllers.ReviewInput:
    properties:
      comment:
        type: string
      game_id:
        type: integer
      rating:
        type: integer
      user_id:
        type: integer
    required:
    - game_id
    - rating
    - user_id
    type: object
  models.Game:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /games:
    get:
      description: Get all games from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get all games
      tags:
      - Games
    post:
      description: Create a new game with the provided details.
      parameters:
      - description: JWT access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game details
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.GameInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Create a new game.
      tags:
      - Games
  /games/{id}:
    delete:
      description: Delete an existing game.
      parameters:
      - description: JWT access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: game deleted successfully
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Delete a game.
      tags:
      - Games
    put:
      description: Update an existing game with the provided details.
      parameters:
      - description: JWT access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game ID
        in: path
        name: id
        required: true
        type: integer
      - description: Game details
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.GameInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Update a game.
      tags:
      - Games
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as as user.
      tags:
      - Auth
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
  /reviews:
    post:
      description: Create a new review for a specific game.
      parameters:
      - description: JWT access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review details
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ReviewInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Create a new review.
      tags:
      - Reviews
swagger: "2.0"
